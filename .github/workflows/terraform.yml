name: Setup and run Terraform
on:
  push:
    branches:
      - main
  schedule:
    - cron:  '11 11 11 * *'
jobs:
  terraform_job:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
    - id: terraform
      run: |
        $Repo = "${{ github.repository }}"
        $BaseUri = "https://api.github.com"
        $ArtifactUri = "$BaseUri/repos/$Repo/actions/artifacts"
        $Token = "${{ github.token }}" | ConvertTo-SecureString -AsPlainText
        $RestResponse = Invoke-RestMethod -Authentication Bearer -Uri $ArtifactUri -Token $Token | Select-Object -ExpandProperty artifacts
        if ($RestResponse){
          $MostRecentArtifactURI = $RestResponse | Sort-Object -Property created_at -Descending | where name -eq "terraformstatefile" | Select-Object -First 1 | Select-Object -ExpandProperty archive_download_url
          Write-Host "Most recent artifact URI = $MostRecentArtifactURI"
          if ($MostRecentArtifactURI){
            Invoke-RestMethod -uri $MostRecentArtifactURI -Token $Token -Authentication bearer -outfile ./state.zip
            Expand-Archive ./state.zip
            openssl enc -d -in ./state/terraform.tfstate.enc -aes-256-cbc -pbkdf2 -pass pass:"${{ inputs.encryptionkey }}" -out ./terraform.tfstate
          }
        }
        cd ./pre_existing_values
        terraform init
        terraform apply -auto-approve
        cd ..
        terraform init
        terraform apply -auto-approve
        $StateExists = Test-Path -Path ./terraform.tfstate -PathType Leaf
        if ($StateExists){
          openssl enc -in ./terraform.tfstate -aes-256-cbc -pbkdf2 -pass pass:"${{ inputs.encryptionkey }}" -out ./terraform.tfstate.enc
        }
      shell: pwsh
    - uses: actions/upload-artifact@v2
      with:
        name: terraformstatefile
        path: ./terraform.tfstate.enc
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Render terraform docs for subfolder and push changes back to PR
      uses: terraform-docs/gh-actions@main
      with:
        working-dir: ./pre_existing_values/
        output-file: readme.md
        output-method: inject
        git-push: "true"
    - name: Render terraform docs and push changes back to PR
      uses: terraform-docs/gh-actions@main
      with:
        output-file: readme.md
        output-method: inject
        git-push: "true"
